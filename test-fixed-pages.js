// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
const fs = require('fs');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...\n');

const files = [
    'technology/quantum-dots.html',
    'technology/materials.html',
    'technology/focus.html',
    'technology/purchase.html',
    'company/vision.html',
    'company/team.html',
    'company/samarkand.html',
    'company/careers.html',
    'company/board.html'
];

let totalFiles = 0;
let validFiles = 0;
let issues = [];

files.forEach(file => {
    if (!fs.existsSync(file)) {
        console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file}`);
        return;
    }
    
    totalFiles++;
    const content = fs.readFileSync(file, 'utf8');
    let fileIssues = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å—Å—ã–ª–æ–∫
    if (content.includes('href="index.html"')) {
        fileIssues.push('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    }
    
    if (content.includes('href="../../css/')) {
        fileIssues.push('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ CSS —Ñ–∞–π–ª–∞–º');
    }
    
    if (content.includes('href="../../assets/')) {
        fileIssues.push('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ assets');
    }
    
    if (content.includes('href="../../js/')) {
        fileIssues.push('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ JS —Ñ–∞–π–ª–∞–º');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    if (!content.includes('href="../index.html"')) {
        fileIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    }
    
    if (!content.includes('href="../css/')) {
        fileIssues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫ CSS');
    }
    
    if (fileIssues.length === 0) {
        console.log(`‚úÖ ${file}`);
        validFiles++;
    } else {
        console.log(`‚ö†Ô∏è  ${file}:`);
        fileIssues.forEach(issue => {
            console.log(`   - ${issue}`);
        });
        issues.push({ file, issues: fileIssues });
    }
});

console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${totalFiles}`);
console.log(`   –í–∞–ª–∏–¥–Ω—ã—Ö: ${validFiles}`);
console.log(`   –° –ø—Ä–æ–±–ª–µ–º–∞–º–∏: ${issues.length}`);

if (issues.length > 0) {
    console.log(`\nüîß –ü—Ä–æ–±–ª–µ–º—ã:`);
    issues.forEach(({ file, issues: fileIssues }) => {
        console.log(`\n${file}:`);
        fileIssues.forEach(issue => {
            console.log(`  - ${issue}`);
        });
    });
} else {
    console.log(`\nüéâ –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
    console.log(`üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000`);
}
